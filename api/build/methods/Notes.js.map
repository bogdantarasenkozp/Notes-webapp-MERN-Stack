{"version":3,"sources":["../../src/methods/Notes.js"],"names":["addNote","data","Note","save","err","note","getAllNotes","id","find","userid","users","updateNote","findOneAndUpdate","_id","text","findById","deleteNote","findByIdAndRemove"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,UAAU,SAAVA,OAAU,CAACC,IAAD,EAAU;AACxB,MAAIC,OAAO,oBAAcD,IAAd,CAAX;AACAC,OAAKC,IAAL,CACE,UAACC,GAAD,EAAKC,IAAL,EAAc;AACZ,QAAID,GAAJ,EAAS,MAAMA,GAAN;AACV,GAHH;AAKA,SAAOF,IAAP;AACD,CARD;;AAUA,IAAMI,cAAc,SAAdA,WAAc,CAACC,EAAD,EAAQ;AAC1B,SAAO,gBAAUC,IAAV,CACJ,EAACC,QAAOF,EAAR,EADI,EACQ,UAACH,GAAD,EAAKM,KAAL,EAAe;AAC1B,QAAIN,GAAJ,EAAS,MAAMA,GAAN;AACT,WAAOM,KAAP;AACD,GAJI,CAAP;AAMD,CAPD;;AASA,IAAMC,aAAa,SAAbA,UAAa,CAACJ,EAAD,EAAIN,IAAJ,EAAa;AAC9B,kBAAUW,gBAAV,CACE,EAACC,KAAIN,EAAL,EADF,EACW,EAACO,MAAKb,KAAKa,IAAX,EADX,EAC4B,UAACV,GAAD,EAAKC,IAAL,EAAc;AACtC,QAAID,GAAJ,EAAS,MAAMA,GAAN;AACTC,SAAKS,IAAL,GAAYb,KAAKa,IAAjB;AACAT,SAAKF,IAAL,CACE,UAACC,GAAD,EAAKC,IAAL,EAAY;AACV,UAAID,GAAJ,EAAS,MAAMA,GAAN;AACV,KAHH;AAKD,GATH;AAWA,SAAO,gBAAUW,QAAV,CACLR,EADK,EACD,UAACH,GAAD,EAAMC,IAAN,EAAe;AACjB,QAAID,GAAJ,EAAS,MAAMA,GAAN;AACT,WAAOC,IAAP;AACD,GAJI,CAAP;AAMD,CAlBD;;AAoBA,IAAMW,aAAa,SAAbA,UAAa,CAACT,EAAD,EAAQ;AACzB,kBAAUU,iBAAV,CACEV,EADF,EACK,UAACH,GAAD,EAAKC,IAAL,EAAc;AACf,QAAID,GAAJ,EAAS,MAAMA,GAAN;AACV,GAHH;AAKD,CAND;;kBAQe,EAAEJ,gBAAF,EAAUM,wBAAV,EAAsBK,sBAAtB,EAAiCK,sBAAjC,E","file":"Notes.js","sourcesContent":["import NoteModel from '../models/Notes'\n\nconst addNote = (data) => {\n  let Note = new NoteModel(data);\n  Note.save(\n    (err,note) => {\n      if (err) throw err;\n    }\n  );\n  return Note;\n}\n\nconst getAllNotes = (id) => {\n  return NoteModel.find(\n     {userid:id},(err,users) => {\n      if (err) throw err;\n      return users;\n    }\n  )\n}\n\nconst updateNote = (id,data) => {\n  NoteModel.findOneAndUpdate(\n    {_id:id},{text:data.text},(err,note) => {\n      if (err) throw err;\n      note.text = data.text;\n      note.save(\n        (err,note)=>{\n          if (err) throw err;\n        }\n      )\n    }\n  )\n  return NoteModel.findById(\n    id, (err, note) => {\n      if (err) throw err;\n      return note;\n    }\n  )\n}\n\nconst deleteNote = (id) => {\n  NoteModel.findByIdAndRemove(\n    id,(err,note) => {\n      if (err) throw err;\n    }\n  )\n}\n\nexport default { addNote,getAllNotes,updateNote,deleteNote };\n"]}