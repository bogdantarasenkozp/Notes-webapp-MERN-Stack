{"version":3,"sources":["../src/index.js"],"names":["port","process","env","PORT","db","protected_routes","public_routes","app","use","routes","allowedMethods","initialize","secret","debug","listen","console","log"],"mappings":";;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAMC,KAAK,2CAAX;AACA,IAAMC,mBAAmB,2BAAY,0BAAZ,CAAzB;AACA,IAAMC,gBAAgB,0BAAW,0BAAX,CAAtB;;AAEA,IAAMC,MAAM,mBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,sBAAR;;AAEAD,IAAIC,GAAJ,CAAQ,8BAAR;;AAEA;AACA;AACA;AACA;;AAEAD,IAAIC,GAAJ,CAAQF,cAAcG,MAAd,EAAR;AACAF,IAAIC,GAAJ,CAAQF,cAAcI,cAAd,EAAR;;AAEAH,IAAIC,GAAJ,CAAQ,mBAASG,UAAT,EAAR;AACAJ,IAAIC,GAAJ,CAAQ,sBAAI,EAAEI,QAAQ,QAAV,EAAoBC,OAAO,IAA3B,EAAJ,CAAR;;AAEAN,IAAIC,GAAJ,CAAQH,iBAAiBI,MAAjB,EAAR;AACAF,IAAIC,GAAJ,CAAQH,iBAAiBK,cAAjB,EAAR;;AAEA;AACA;AACA;;AAEAH,IAAIO,MAAJ,CAAWd,IAAX,EAAgB,YAAM;AACrBe,SAAQC,GAAR,CAAY,oBAAkBhB,IAA9B;AACA,CAFD","file":"index.js","sourcesContent":["import 'babel-polyfill';\nimport Koa from 'koa';\nimport mongoose from 'mongoose';\nimport router_middleware from 'koa-router';\nimport parser from 'koa-bodyparser';\nimport cors from 'kcors';\nimport jwt from \"koa-jwt\";\n\nimport private_api from './routes/private_api';\nimport public_api from './routes/public_api';\nimport connect from './config/mongoose'\nimport passport, { localAuthHandler } from \"./auth/passport\";\n\nconst port = process.env.PORT || 8000;\nconst db = connect(mongoose);\nconst protected_routes = private_api(router_middleware());\nconst public_routes = public_api(router_middleware());\n\nconst app = new Koa();\n\napp.use(cors());\n\napp.use(parser());\n\n// app.use(async (ctx,next) => {\n// \tconsole.log(ctx);\n// \treturn await next();\n// });\n\napp.use(public_routes.routes());\napp.use(public_routes.allowedMethods());\n\napp.use(passport.initialize());\napp.use(jwt({ secret: \"secret\", debug: true }))\n\napp.use(protected_routes.routes());\napp.use(protected_routes.allowedMethods());\n\n// app.use(async (ctx) => {\n//     ctx.body = 'Hello world';\n// });\n\napp.listen(port,() => {\n\tconsole.log('listen on port '+port);\n});\n"]}