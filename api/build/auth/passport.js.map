{"version":3,"sources":["../../src/auth/passport.js"],"names":["use","username","password","done","findOneOrCreate","err","user","message","console","log","verified","localAuth","ctx","next","authenticate","info","status","body","accessToken","refreshToken","throw"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;;;;;AAEA,sBAASA,GAAT,CACE,4BACE,UAACC,QAAD,EAAWC,QAAX,EAAqBC,IAArB,EAA8B;;AAE5B,iBAAUC,eAAV,CACE,EAACH,UAASA,QAAV,EADF,EACsB,EAACA,UAASA,QAAV,EAAmBC,UAASA,QAA5B,EADtB,EAC4D,UAACG,GAAD,EAAKC,IAAL,EAAc;AACtE,QAAID,GAAJ,EAASF,KAAM,IAAN,EAAY,KAAZ,EAAmB,EAAEI,SAAS,iCAAX,EAAnB;AACTC,YAAQC,GAAR,CAAYH,IAAZ;AACAH,SAAM,IAAN,EACE;AACEF,gBAAUK,KAAKL,QADjB;AAEES,gBAAU;AAFZ,KADF,EAKE,EAAEH,SAAS,SAAX,EALF;AAQD,GAZH;;AAeN;AACA;AACA;AACA;;AAEM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,CAjCH,CADF;;AAsCO,IAAMI,gCAAY,SAAZA,SAAY,CAACC,GAAD,EAAMC,IAAN,EAAe;AACtC,SAAO,sBAASC,YAAT,CACL,OADK;AAAA,yDACI,iBAAOT,GAAP,EAAYC,IAAZ,EAAkBS,IAAlB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBACHT,SAAS,KADN;AAAA;AAAA;AAAA;;AAELM,kBAAII,MAAJ,GAAa,GAAb;AACAJ,kBAAIK,IAAJ,GAAWF,KAAKR,OAAhB;AAHK;AAAA;;AAAA;AAAA;AAAA;AAAA,qBAMyC,2BAAe,EAACD,UAAD,EAAf,EAAuB,QAAvB,CANzC;;AAAA;AAAA;AAMKY,yBANL,SAMKA,WANL;AAMkBC,0BANlB,SAMkBA,YANlB;;AAOHP,kBAAIK,IAAJ,GAAW;AACTC,wCADS;AAETC;AAFS,eAAX;AAPG;AAAA;;AAAA;AAAA;AAAA;;AAYHP,kBAAIQ,KAAJ,CAAU,GAAV;;AAZG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;;AAAA;AAAA;AAAA;AAAA,OAiBLR,GAjBK,EAiBAC,IAjBA,CAAP;AAkBD,CAnBM","file":"passport.js","sourcesContent":["import passport from \"koa-passport\";\nimport { Strategy as LocalStrategy } from \"passport-local\";\nimport { generateTokens } from \"./token\";\nimport UserModel from '../models/User';\n\npassport.use(\n  new LocalStrategy(\n    (username, password, done) => {\n\n      UserModel.findOneOrCreate(\n        {username:username},{username:username,password:password},(err,user) => {\n          if (err) done( null, false, { message: 'Incorrect username or password.' } );\n          console.log(user)\n          done( null,\n            {\n              username: user.username,\n              verified: \"true\"\n            },\n            { message: 'Success' }\n          );\n\n        }\n      )\n\n// Person.findOneOrCreate({name: 'Mohammad'}, {name: 'Mohammad', age: 20}, function(err, person) {\n// // {name: 'Mohammad', age: 20}\n// console.log(person);\n// });\n\n      // if (username === \"test\" && password === \"test\") {\n      //   console.log(1);\n      //   done(null, {\n      //     username: \"test\",\n      //     verified: \"true\"\n      //   }, { message: 'Success' });\n      // } else if (username !== \"test\" || password !== \"test\") {\n      //   done(null, false, { message: 'Incorrect username or password.' });\n      // }\n\n    }\n  )\n);\n\nexport const localAuth = (ctx, next) => {\n  return passport.authenticate(\n    'local', async (err, user, info) => {\n      if (user === false) {\n        ctx.status = 401;\n        ctx.body = info.message;\n      } else {\n        try {\n          const { accessToken, refreshToken } = await generateTokens({user}, \"secret\");\n          ctx.body = {\n            accessToken,\n            refreshToken\n          }\n        } catch (e) {\n          ctx.throw(500, e);\n        }\n      }\n    }\n  )(ctx, next);\n};\n\n\nexport default passport;\n"]}